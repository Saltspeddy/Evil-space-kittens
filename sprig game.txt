/*
First time? Check out the tutorial game:
https://sprig.hackclub.com/gallery/getting_started

@title: Evil space kittens
@author: Dragos Gabriel Matu
@tags: []
@addedOn: 2024-00-00
*/


const chicken = "C"
const chick = "K"
const rooster = "R"

const player = "p"

const kitty = "k"
const cat = "c"
const tomcat = "t"

//BOSS cat
const bosscat1 = "1"
const bosscat2 = "2"
const bosscat3 = "3"
const bosscat4 = "4"
const bosscat5 = "5"
const bosscat6 = "6"
const bosscat7 = "7"
const bosscat8 = "8"
const bosscat9 = "9"

const starsbackground1 ="b"
const starsbackground2 ="a"
const starsbackground3 ="e"
const starsbackground4 ="i"
const starsbackground5 ="o"

//Projectiles
const hairball = "h"
const fireball = "f"
const missile = "m";

//MeowField is basically a shield that the level 2 white cats use to protect themselves and the neighbouring cats from the player missiles
const meowField = "M"
  
setLegend(
  [ player, bitmap`
................
................
................
.......00.......
......0550......
.....005500.....
.....055550.....
....00566500....
...0505665050...
...0505665050...
...0005555000...
.....000000.....
......9969......
.....966699.....
......9996......
................` ],
  [chicken, bitmap`
................
................
........3.......
......2222......
.....202202.....
.....222222.....
222..223322..222
2222..2222..2222
2222222222222222
.22222222222222.
...2222222222...
.....222222.....
......0..0......
......0..0......
.....0....0.....
................`],
  
  [kitty, bitmap`
................
.....222222.....
....2......2....
...2.1...1..2...
...2.11.11..2...
...2.11111..2...
...2.15151..2...
...2.11111..2...
....22222222..1.
.....11111....1.
.....122211..1..
.....122211111..
.....12221111...
.....1222111....
................
................`],
  [cat, bitmap`
................
.....000000.....
....0......0....
...0.2....2.0...
...0.22..22.0...
...0.222222.0...
...0.202022.0...
...0.222222.0...
....02222220....
.....000000.....
......33333...2.
......22622...2.
......22222...2.
.....2222222.22.
.....222222222..
................`],
  [tomcat, bitmap`
.....000000.....
....0......0....
...0.L....L.0...
..0..LL..LL..0..
..0..LLLLLL..0..
..0..L5L5LL..0..
..0.00LLLL00.0..
..0..LL3LLL..0..
...0.LLLLLL.0...
....00000000..LL
.....LLLLLL..L.L
.....LL11LLL...L
....LL1111LL...L
....LL1111LLL.LL
....LL1111LLLLL.
....LL1111LLLLL.`],
  
  [hairball, bitmap`
................
................
.......CC1..1...
.....CC111C11...
....C1C11C11C...
..C111CCCCC11...
...CCCC111CC11..
...C1CC1CC11CC..
...CC11CCC1CCC..
....CCC1C1CC111.
...11CCCCCC1CC1.
....CC1CC1C1....
.....11C1C.1....
........1.......
................
................`],
  [starsbackground1, bitmap`
0000000000000000
0000002000000000
0010000000001000
0000000000000000
000000000L000000
0200000000000000
0000000000002000
0000060000000000
0000000000000000
0000000000000000
0000000010000660
00L0000000006666
0000000000006666
0000200000000660
0000000001000000
0000000000000000`],
  [starsbackground2, bitmap`
0000000000000000
0000L00000100000
0000000000000000
0000000200000000
0100000000000000
0000000000000L00
0000000000000000
0002000000000000
0000000001000000
0000000000000000
0000002000000200
0000000000000000
0010000000000000
0000000000010000
00000L0000000000
0000000000000000`],
  [starsbackground3, bitmap`
0000000000000000
0000000010000000
00L00000000000L0
0000000000000000
0000000000200000
0000010000000000
0000000000000000
0000000000000000
0200000000077000
0000000001077000
0000002000000000
0000000000000000
000L000000000020
0000000000000000
0000000000100000
0000000000000000`],
  [starsbackground4, bitmap`
0000000000000000
0200000000000L00
0000010002000000
0000000000000000
0000L00000006000
0000000000000000
6000000000000000
0000000100000000
0020000000000010
0000000000000000
0000000000200000
0000000000000000
0001000000000L00
000000L000000000
0000000000000000
0000000000000000`],
  [starsbackground5, bitmap`
0000000000000000
0100000000200000
0000000000000000
0000444000000000
0004444400000000
00044444000000L0
0004444400000000
0000444001000000
0000000000000000
0000000000002000
0000L00000000000
0000000000000000
0000000000000L00
0000000100000000
0020000000000000
0000000000000000`],
  [missile, bitmap`
................
................
................
.......00.......
......0330......
......0330......
......0330......
......0330......
.......00.......
.......96.......
......66.9......
.......69.......
........6.......
.......9........
................
................`],
    [meowField, bitmap`
................
................
....F......F....
....4DD..DD4....
.....4FDDF4.....
..F....44....F..
..4DDD....DDD4..
...44FDDDDF44...
.F...444444...F.
.4DF...44...FD4.
..4DDF....FDD4..
...44DDDDDD44...
.....444444.....
................
................
................`],

  
  [bosscat1, bitmap`
.......999999009
.......999999900
.......999999999
........99999999
........99999999
.........9999999
0000.....9999992
...00000.9999922
.000....00000022
...00000.0999922
......0.00000002
..00000000..9999
..............99
................
................
................`],
  [bosscat2, bitmap`
................
.......999......
......99999.....
....00999999....
......0033999...
......99339999..
.....000333999..
....0.993339999.
......9933339999
......9099339999
.....00999999999
.......999999999
........99999099
........99999099
........99999099
........99999909`],
  [bosscat3, bitmap`
9099999999999009
0999999999999900
9999999999999999
9999999999999999
9999999999999999
9999922222229999
2222220333022222
2222222030222222
2222222202222222
2222022202220222
2222200020002222
9992222222222999
9999999999999999
..999999999999..
................
................`],
  [bosscat4, bitmap`
9009999999......
0999999999......
9999999999......
9999999999......
9999999999......
999999999.......
29999999....0000
2299999900000...
222999000...000.
2229000.00000...
22999000.0......
999009....000...
99999...........
................
................
................`],
  [bosscat5, bitmap`
................
.......999......
......99999.0...
.....9999000....
.....9933999....
....99933999....
...9993330090...
...993333990....
..99933339990...
.99993390999....
999999999000....
99999999999.0...
99999999999.....
99099999999.....
9909999999......
9009999999......`],
  [bosscat6, bitmap`
................
................
................
................
................
................
................
................
9...............
999..........999
9999999999999999
9999999999999999
9999999999999999
9909999999990999
9909999999990999
9909999999990999`],
  [bosscat7, bitmap`
................
................
................
......92.92.....
...99.33.33.92..
...33.33233.332.
...932232232232.
...922222222222.
...922233322229.
...923333333229.
...22333333329..
...99222222299..
....922222229...
......29999.....
................
................`],
)
setBackground(starsbackground2)

setSolids([ player ])

const levels = [
  map`
.........
.k.k.k.k.
.........
.........
.........
.........
.........
.........
.........
....p....
.........`,
   map`
.........
.kckkkck.
.........
.........
.........
.........
.........
.........
.........
....p....
.........`,
  map`
.........
.tck.kct.
.........
...tct...
.........
.........
.........
.........
.........
....p....
.........`,
map`
.........
...265...
...134...
...7.7...
.........
.........
.........
.........
.........
....p....
.........`
]

setMap(levels[0]);

function shootMissile() {
  let x = getFirst(player).x;
  let y = 9;
  addSprite(x, y, missile);

}

let level = 0;
let boolean = false;

// wsaCount of enemies killed 
let count = 0;

function moveMissile() {
  let missiles = getAll(missile);
  for( let i = 0 ; i < missiles.length ; i++)
    missiles[i].y -= 1;
}

function removeKittens() {
  let missiles = getAll(missile)
  for(let i = 0 ; i < missiles.length; i++ ) {
    let kittens = getAll(kitty);
    for( let j = 0 ; j < kittens.length; j++ ){
      if( missiles[i].x == kittens[j].x && missiles[i].y == kittens[j].y ){
        clearTile(kittens[j].x,kittens[j].y)
        count++;
      }
    }
    if(level == 1){
    let cats = getAll(cat)
      for (let j = 0 ; j < cats.length ; j++ ){
        if( missiles[i].x == cats[j].x && missiles[i].y == cats[j].y ){
        clearTile(cats[j].x,cats[j].y)
        count++;
      }
      }
    }
  }
}

function enableMeowField(){
  let cats = getAll(cat)
 
  for( let i = 0 ; i < cats.length ; i++ ){
    addSprite(cats[i].x, cats[i].y + 1, meowField)
    addSprite(cats[i].x + 1, cats[i].y + 1, meowField)
    addSprite(cats[i].x - 1, cats[i].y + 1, meowField)
    addSprite(cats[i].x, cats[i].y + 2, meowField)
  }
    
}
function moveMeowField(){
  let fields = getAll(meowField)

  for(let i = 0 ; i < fields.length ; i++ )
    fields[i].y += 1
}

function moveKittens() {
  let kittens = getAll(kitty);
  for( let i = 0 ; i < kittens.length; i++ ){
    kittens[i].y += 1;
  }
  let cats = getAll(cat)
  for( let i = 0 ; i < cats.length ; i++ ){
    cats[i].y += 1;
  }
}

function shootHairball() {
  let kittens = getAll(kitty);
  for( let i = 0 ; i < kittens.length ; i++ ) {
    addSprite(kittens[i].x , kittens[i].y , hairball )
  }
}

function moveHairball(){

  let hairballs = getAll(hairball);
  if(hairballs.lentgh != 0 ){
    for( let i = 0 ; i < hairballs.length ; i++ ){
       if( hairballs.length != 0 )
         hairballs[i].y += 1;
    }
  }
  else console.log();
}


function removePlayer(){
  let hairballs = getAll(hairball);
  for( let i = 0 ; i < hairballs.length ; i++ ){
    if(hairballs[i].x == getFirst(player).x && hairballs[i].y == getFirst(player).y ){
      addText("Game Moewver <3", {x: 1,
      y: 3,
      color: color`8`
      })
      addText("Press s to restart", {x: 1,
      y: 6,
      color: color`8`
      })
      level = 0;
      setMap(levels[0]);
      boolean = false
    }
  }
  let kittens = getAll(kitty);
  for( let i = 0 ; i < kittens.length; i++ ){
    if(kittens[i].y + 1 == 10) {
    addText("Game Moewver <3", {x: 1,
    y: 3,
    color: color`8`
    });
    addText("Press s to restart", {x: 1,
    y: 6,
    color: color`8`
    })
    level = 0;
    setMap(levels[0]);
    boolean = false
    }
  }
}

// Removing projectiles when they reach the end of the map and when they hit eachother
function removeProjectiles(){
  let hairballs = getAll(hairball)
    for( let i = 0 ; i < hairballs.length ; i++ )
      if( hairballs[i].y == 10 ) 
        clearTile( hairballs[i].x , 10)

  let missiles = getAll(missile);
    for( let i = 0 ; i < missiles.length ; i++)
      if( missiles[i].y == 1 )
        clearTile( missiles[i].x , 1)

  for( let i = 0 ; i < missiles.length ; i++ )
    for( let j = 0 ; j < hairballs.length ; j++){
      if( missiles[i].x == hairballs[j].x && missiles[i].y == hairballs[j].y ){
        clearTile( missiles[i].x, missiles[i].y )
      }
      if( missiles[i].x == hairballs[j].x && missiles[i].y + 1 == hairballs[j].y ){
        clearTile( missiles[i].x, missiles[i].y )
        clearTile( hairballs[j].x, hairballs[j].y )
      }
    }
  let fields = getAll(meowField)
    for( let i = 0 ; i < fields.length ; i++)
      if( fields[i].y == 10 )
        clearTile( fields[i].x , 10)
  for( let i = 0 ; i < missiles.length ; i++ )
    for( let j = 0 ; j < fields.length ; j++){
      if( missiles[i].x == fields[j].x && missiles[i].y == fields[j].y ){
        clearTile( missiles[i].x, missiles[i].y )
      }
      if( missiles[i].x == fields[j].x && missiles[i].y + 1 == fields[j].y ){
        clearTile( missiles[i].x, missiles[i].y )
        clearTile( fields[j].x, fields[j].y )
      }
    }
}

setInterval(() => {
  if( boolean === true ){
  shootHairball();
  }
},7000)


setInterval(() => {
  if( boolean === true ){
      moveHairball();
      moveMissile();
      removeKittens();
      removePlayer();
      removeProjectiles();
     

      if( level == 0 && count == 4){
        addText("Victory!", {x: 6,
        y: 6,
        color: color`8`
        })
        addText("Press s to go ", {x: 4,
        y: 8,
        color: color`8`
        })
        addText("to the next level ", {x: 2,
        y: 9,
        color: color`8`
        })
        boolean = false
        level++;
          count = 0;
      }
      else if (level == 1 && count == 7 ) {
        addText("Victory!", {x: 6,
        y: 6,
        color: color`8`
        })
        addText("Press s to go ", {x: 4,
        y: 8,
        color: color`8`
        })
        addText("to the next level ", {x: 2,
        y: 9,
        color: color`8`
        })
        boolean = false
        level++;
          count = 0;
        }
    else if (level == 2 && count == 9 ) {
        addText("Victory!", {x: 6,
        y: 6,
        color: color`8`
        })
        addText("Press s to go ", {x: 4,
        y: 8,
        color: color`8`
        })
        addText("to the next level ", {x: 2,
        y: 9,
        color: color`8`
        })
        boolean = false
        level++;
          count = 0;
        }
      }


},500)
  



setInterval(() => {
  if( boolean === true ){
  enableMeowField()
  moveKittens();

    moveMeowField()
  }
}, 10000)
setPushables({
  [ player ]: []
})

addText("You wouldn't  ", {x: 4,
  y: 1,
  color: color`8`
})
  addText("hurt an innocent", {x: 2,
  y: 2,
  color: color`8`
})
addText("kitten...would you? ", {x: 1,
  y: 3,
  color: color`8`
})
addText("Press s to start ", {x: 1,
  y: 6,
  color: color`8`
})



onInput("a", () => {
  if(boolean == true)
  getFirst(player).x -= 1
})
onInput("d", () => {
  if(boolean == true)
  getFirst(player).x += 1
})
onInput("w", () => {
  if(boolean == true)

    shootMissile();  
}) 

onInput("s", () => {
  if(boolean == false){
    if( level == 0 ){
      clearText()
      boolean = true;
    }
    if( level == 1 ){
      setMap(levels[1]);
      clearText();
      boolean = true;
    }
    if( level == 2 ){
      setMap(levels[2]);
      boolean = true;
    }
  }
})

afterInput(() => {
})